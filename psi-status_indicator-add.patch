diff -ru -X exclude psi/iris/xmpp-im/client.cpp psi-skz/iris/xmpp-im/client.cpp
--- psi/iris/xmpp-im/client.cpp	Sun May 16 16:06:10 2004
+++ psi-skz/iris/xmpp-im/client.cpp	Fri May 28 10:27:02 2004
@@ -789,10 +789,27 @@
 
 	// unavailable?  remove the resource
 	if(!s.isAvailable()) {
-		if(found) {
-			(*rit).setStatus(s);
-			debug(QString("Client: Removing resource from [%1]: name=[%2]\n").arg(i->jid().full()).arg(j.resource()));
-			resourceUnavailable(j, *rit);
+		Resource r;
+		if(!found) {
+			//if (!s.status().isEmpty()) {
+				r = Resource(j.resource(), s);
+				i->resourceList() += r;
+				debug(QString("Client: Adding resource to [%1]: name=[%2]\n").arg(i->jid().full()).arg(j.resource()));
+				resourceAvailable(j, r);
+		} 
+		else {
+				(*rit).setStatus(s);
+				r = *rit;
+				debug(QString("Client: Updating resource to [%1]: name=[%2]\n").arg(i->jid().full()).arg(j.resource()));
+				resourceAvailable(j, r);			
+		}
+		
+		rit = i->resourceList().find(j.resource());
+		found = (rit == i->resourceList().end()) ? false: true;
+		
+ 		if(found) {
+ 			(*rit).setStatus(s);
+ 			debug(QString("Client: Removing resource from [%1]: name=[%2]\n").arg(i->jid().full()).arg(j.resource())); 	resourceUnavailable(j, *rit);
 			i->resourceList().remove(rit);
 			i->setLastUnavailableStatus(s);
 		}
diff -ru -X exclude psi/src/chatdlg.cpp psi-skz/src/chatdlg.cpp
--- psi/src/chatdlg.cpp	Sun May 16 16:06:14 2004
+++ psi-skz/src/chatdlg.cpp	Fri May 28 10:27:02 2004
@@ -371,8 +371,10 @@
 			u = ul.first();
 			if(rname.isEmpty()) {
 				// use priority
-				if(!u->isAvailable())
+				if(!u->isAvailable()){
 					status = STATUS_OFFLINE;
+					statusString = u->lastUnavailableStatus().status();
+				}
 				else {
 					const UserResource &r = *u->userResourceList().priority();
 					status = makeSTATUS(r.status());
diff -ru -X exclude psi/src/common.h psi-skz/src/common.h
--- psi/src/common.h	Fri May 07 20:23:00 2004
+++ psi-skz/src/common.h	Fri May 28 10:27:02 2004
@@ -138,6 +138,7 @@
 	QStringList gcHighlights, gcNickColors;
 
 	bool clNewHeadings;
 	bool outlineHeadings;
+	bool clStIndicator;
 
 	// passive popups
diff -ru -X exclude psi/src/contactview.cpp psi-skz/src/contactview.cpp
--- psi/src/contactview.cpp	Sun Mar 21 15:45:20 2004
+++ psi-skz/src/contactview.cpp	Fri May 28 10:27:36 2004
@@ -25,6 +25,7 @@
 #include<qheader.h>
 #include<qtimer.h>
 #include<qpainter.h>
+#include<qbitmap.h>
 #include<qpopupmenu.h>
 #include<qmessagebox.h>
 #include<qinputdialog.h>
@@ -2111,7 +2112,7 @@
 		cp = _cp;
 		u = 0;
 
-		icon = lastIcon = 0;
+		icon = lastIcon = indIcon = 0;
 	}
 
 	~Private() {
@@ -2171,7 +2172,7 @@
 	bool alerting;
 	bool animatingNick;
 
-	Icon *icon, *lastIcon;
+	Icon *icon, *lastIcon, *indIcon;
 	int animateNickX, animateNickColor; // nick animation
 };
 
@@ -2380,6 +2382,11 @@
 				}
 			}
 		}
+
+		if( d->indIcon ){
+			const QPixmap &ipix = d->indIcon->pixmap();
+			p->drawPixmap((pix->width() - ipix.width())/2, (height() - ipix.height())/2, ipix);
+		}
 	}
 	else if ( d->type == Group || d->type == Profile ) {
 		QColorGroup xcg = cg;
@@ -2652,12 +2659,13 @@
 
 void ContactViewItem::setIcon(const Icon *icon, bool alert)
 {
+	/* needed by status indicator :o| 
 	if ( d->lastIcon == icon ) {
 		return; // cause less flicker. but still have to run calltree valgring skin on psi while online (mblsha).
 	}
 	else
 		d->lastIcon = (Icon *)icon;
-
+	*/
 	if ( d->icon ) {
 		disconnect(d->icon, 0, this, 0 );
 		d->icon->stop();
@@ -2679,11 +2687,29 @@
 		pix = d->icon->pixmap();
 	}
 
-	setPixmap(0, pix);
+	iconUpdated(pix);
 }
 
 void ContactViewItem::iconUpdated(const QPixmap &pix)
 {
+	// set status indicator icon
+	if(d->u){
+		bool ind = false;
+		if(!d->u->userResourceList().isEmpty() && option.clStIndicator) {
+			UserResourceList srl = d->u->userResourceList();
+
+			for(UserResourceList::ConstIterator rit = srl.begin(); rit != srl.end(); ++rit)
+				if(!(*rit).status().status().isEmpty()) { ind = true; break; }
+			
+		} 
+		else if(!d->u->lastUnavailableStatus().status().isEmpty() && option.clStIndicator)
+			ind = true;
+
+		if(ind)
+			d->indIcon = is->indicatorPtr(d->u->jid());
+		else
+			d->indIcon = 0;
+	}
 	setPixmap(0, pix);
 }
 
diff -ru -X exclude psi/src/options/opt_appearance-ui.ui psi-skz/src/options/opt_appearance-ui.ui
--- psi/src/options/opt_appearance-ui.ui	Sat May 01 18:08:18 2004
+++ psi-skz/src/options/opt_appearance-ui.ui	Fri May 28 10:27:02 2004
@@ -30,6 +30,14 @@
                 <string>Small group headings in roster</string>
             </property>
         </widget>
+        <widget class="QCheckBox">
+            <property name="name">
+                <cstring>ck_statusIndicator</cstring>
+            </property>
+            <property name="text">
+                <string>Show indicator for text statuses</string>
+            </property>
+        </widget>
         <widget class="QGroupBox">
             <property name="name">
                 <cstring>groupBox11</cstring>
diff -ru -X exclude psi/src/options/opt_appearance.cpp psi-skz/src/options/opt_appearance.cpp
--- psi/src/options/opt_appearance.cpp	Sat May 01 18:08:20 2004
+++ psi-skz/src/options/opt_appearance.cpp	Fri May 28 10:27:02 2004
@@ -148,6 +148,9 @@
 		s.arg(tr("away")));
 	QWhatsThis::add(d->pb_cDND,
 		s.arg(tr("do not disturb")));
+	QWhatsThis::add(d->ck_statusIndicator,
+		tr("Displays an indicator by the contact name if the contact entered a descriptive text status line."));
+
 	QWhatsThis::add(d->pb_cProfileBack,
 		tr("Specifies the background color for an account name in the main window."));
 	QWhatsThis::add(d->pb_cGroupBack,
@@ -161,5 +164,6 @@
 
-	//OptAppearanceUI *d = (OptAppearanceUI *)w;
+	OptAppearanceUI *d = (OptAppearanceUI *)w;
+	opt->clStIndicator = d->ck_statusIndicator->isChecked();
 	//opt->avatarsChatdlgEnabled = d->ck_avatarsChatdlg->isChecked(); // Avatars
 
 	int n;
@@ -177,5 +181,6 @@
 
-	//OptAppearanceUI *d = (OptAppearanceUI *)w;
+	OptAppearanceUI *d = (OptAppearanceUI *)w;
+	d->ck_statusIndicator->setChecked( opt->clStIndicator );
 	//d->ck_avatarsChatdlg->setChecked( opt->avatarsChatdlgEnabled ); // Avatars
 
 	int n;
diff -ru -X exclude psi/src/psiiconset.cpp psi-skz/src/psiiconset.cpp
--- psi/src/psiiconset.cpp	Wed May 05 14:41:20 2004
+++ psi-skz/src/psiiconset.cpp	Fri May 28 10:27:02 2004
@@ -513,6 +513,19 @@
 	return Icon();
 }
 
+Icon *PsiIconset::indicatorPtr(const XMPP::Jid &jid)
+{
+	return d->jid2icon(jid, "psi/statInd");
+}
+
+Icon PsiIconset::indicator(const XMPP::Jid &jid)
+{
+	Icon *icon = indicatorPtr(jid);
+	if ( icon )
+		return *icon;
+	return Icon();
+}
+
 Icon *PsiIconset::statusPtr(const XMPP::Jid &jid, int s)
 {
 	return d->jid2icon(jid, status2name(s));
diff -ru -X exclude psi/src/psiiconset.h psi-skz/src/psiiconset.h
--- psi/src/psiiconset.h	Sat Nov 22 07:47:10 2003
+++ psi-skz/src/psiiconset.h	Fri May 28 10:27:02 2004
@@ -61,9 +61,11 @@
 	// JID-enabled status functions
 	Icon *statusPtr(const XMPP::Jid &, int);
 	Icon *statusPtr(const XMPP::Jid &, const XMPP::Status &);
+	Icon *indicatorPtr(const XMPP::Jid &);
 
 	Icon status(const XMPP::Jid &, int);
 	Icon status(const XMPP::Jid &, const XMPP::Status &);
+	Icon indicator(const XMPP::Jid &);
 
 	// functions to get status icon by transport name
 	Icon *transportStatusPtr(QString name, int);
diff -ru -X exclude psi/src/psi_profiles.cpp psi-skz/src/psi_profiles.cpp
--- psi/src/psi_profiles.cpp	Sun May 16 16:06:18 2004
+++ psi-skz/src/psi_profiles.cpp	Fri May 28 10:27:02 2004
@@ -423,6 +423,8 @@
 		prefs.font[fPopup] = font.toString();
 	}
 
+	prefs.clStIndicator = TRUE;
+
 	// calculate the small font size
 	const int minimumFontSize = 7;
 	prefs.smallFontSize = qApp->font().pointSize();
@@ -783,6 +785,7 @@
 		p.appendChild(p_lnf);
 
 		p_lnf.appendChild(textTag(doc, "newHeadings", prefs.clNewHeadings));
+		p_lnf.appendChild(textTag(doc, "statusIndicator", prefs.clStIndicator));
 		p_lnf.appendChild(textTag(doc, "chat-opacity", prefs.chatOpacity));
 		p_lnf.appendChild(textTag(doc, "roster-opacity", prefs.rosterOpacity));
 		p_lnf.appendChild(textTag(doc, "outline-headings", prefs.outlineHeadings));
@@ -1271,6 +1274,7 @@
 			bool found;
 
 			readBoolEntry(p_lnf, "newHeadings", &prefs.clNewHeadings);
+			readBoolEntry(p_lnf, "statusIndicator", &prefs.clStIndicator);
 			readBoolEntry(p_lnf, "outline-headings", &prefs.outlineHeadings);
 			readNumEntry(p_lnf, "chat-opacity", &prefs.chatOpacity);
 			readNumEntry(p_lnf, "roster-opacity", &prefs.rosterOpacity);
