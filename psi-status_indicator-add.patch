diff -urN psi-0.11.orig/iris/xmpp-im/client.cpp psi-0.11/iris/xmpp-im/client.cpp
--- psi-0.11.orig/iris/xmpp-im/client.cpp	2007-10-14 16:00:50.000000000 +0200
+++ psi-0.11/iris/xmpp-im/client.cpp	2008-01-25 18:48:00.863060210 +0100
@@ -789,9 +789,26 @@
 
 	// unavailable?  remove the resource
 	if(!s.isAvailable()) {
-		if(found) {
+		Resource r;
+		if(!found) {
+			r = Resource(j.resource(), s);
+			i->resourceList() += r;
+			debug(QString("Client: Adding resource to [%1]: name=[%2]\n").arg(i->jid().full()).arg(j.resource()));
+			resourceAvailable(j, r);
+		} 
+		else {
 			(*rit).setStatus(s);
-			debug(QString("Client: Removing resource from [%1]: name=[%2]\n").arg(i->jid().full()).arg(j.resource()));
+			r = *rit;
+			debug(QString("Client: Updating resource to [%1]: name=[%2]\n").arg(i->jid().full()).arg(j.resource()));
+			resourceAvailable(j, r);			
+		}
+		
+		rit = i->resourceList().find(j.resource());
+		found = (rit == i->resourceList().end()) ? false: true;
+		
+ 		if(found) {
+ 			(*rit).setStatus(s);
+ 			debug(QString("Client: Removing resource from [%1]: name=[%2]\n").arg(i->jid().full()).arg(j.resource()));
 			resourceUnavailable(j, *rit);
 			i->resourceList().remove(rit);
 			i->setLastUnavailableStatus(s);
diff -urN psi-0.11.orig/src/chatdlg.cpp psi-0.11/src/chatdlg.cpp
--- psi-0.11.orig/src/chatdlg.cpp	2007-10-14 16:00:51.000000000 +0200
+++ psi-0.11/src/chatdlg.cpp	2008-01-25 18:27:20.605745518 +0100
@@ -575,8 +575,10 @@
 			u = ul.first();
 			if(rname.isEmpty()) {
 				// use priority
-				if(!u->isAvailable())
+				if(!u->isAvailable()){
 					status = STATUS_OFFLINE;
+					statusString = u->lastUnavailableStatus().status();
+				}
 				else {
 					const UserResource &r = *u->userResourceList().priority();
 					status = makeSTATUS(r.status());
diff -urN psi-0.11.orig/src/common.h psi-0.11/src/common.h
--- psi-0.11.orig/src/common.h	2007-10-14 16:00:51.000000000 +0200
+++ psi-0.11/src/common.h	2008-01-25 18:27:20.605745518 +0100
@@ -124,6 +124,7 @@
 
 	bool clNewHeadings;
 	bool outlineHeadings;
+	bool clStIndicator;
 
 	// passive popups
 	bool ppIsOn;
diff -urN psi-0.11.orig/src/contactview.cpp psi-0.11/src/contactview.cpp
--- psi-0.11.orig/src/contactview.cpp	2007-10-14 16:00:51.000000000 +0200
+++ psi-0.11/src/contactview.cpp	2008-01-25 18:42:31.806073588 +0100
@@ -26,6 +26,7 @@
 #include <q3header.h>
 #include <qtimer.h>
 #include <qpainter.h>
+#include <qbitmap.h>
 #include <q3popupmenu.h>
 #include <qmessagebox.h>
 #include <qinputdialog.h>
@@ -3378,11 +3379,13 @@
 
 void ContactViewItem::setIcon(const PsiIcon *icon, bool alert)
 {
+	/* needed by status indicator :o|
 	if ( d->lastIcon == icon ) {
 		return; // cause less flicker. but still have to run calltree valgring skin on psi while online (mblsha).
 	}
 	else
 		d->lastIcon = (PsiIcon *)icon;
+	*/
 
 	if ( d->icon ) {
 		disconnect(d->icon, 0, this, 0 );
@@ -3392,7 +3395,6 @@
 		d->icon = 0;
 	}
 
-	QPixmap pix;
 	if ( icon ) {
 		if ( !alert )
 			d->icon = new PsiIcon(*icon);
@@ -3403,16 +3405,44 @@
 			connect(d->icon, SIGNAL(pixmapChanged()), SLOT(iconUpdated()));
 		}
 		d->icon->activated();
-
-		pix = d->icon->pixmap();
 	}
 
-	setPixmap(0, pix);
+	iconUpdated();
 }
 
 void ContactViewItem::iconUpdated()
 {
-	setPixmap(0, d->icon ? d->icon->pixmap() : QPixmap());
+	QPixmap out(d->icon ? d->icon->pixmap() : QPixmap());
+	// add status indicator to contact icon
+	if(d->u && !out.isNull()){
+		bool ind = false;
+		if(!d->u->userResourceList().isEmpty() && option.clStIndicator) {
+			UserResourceList srl = d->u->userResourceList();
+
+			for(UserResourceList::ConstIterator rit = srl.begin(); rit != srl.end(); ++rit)
+				if(!(*rit).status().status().isEmpty()) { ind = true; break; }
+			
+		} 
+		else if(!d->u->lastUnavailableStatus().status().isEmpty() && option.clStIndicator)
+			ind = true;
+
+		if(ind) {
+			const QPixmap &ipix = is->indicator(d->u->jid()).pixmap();
+			// sum masks
+			if(out.hasAlpha() && ipix.hasAlpha()){
+				QBitmap mask(*out.mask());
+				const QBitmap* imask = ipix.mask();
+				bitBlt(&mask, (mask.width() - imask->width())/2, (mask.height() - imask->height())/2, 
+					imask, 0, 0, imask->width(), imask->height(), 
+					QPixmap::OrROP);
+				out.setMask(mask);
+			}
+			bitBlt(&out, (out.width() - ipix.width())/2, (out.height() - ipix.height())/2, 
+				&ipix, 0, 0, ipix.width(), ipix.height(), 
+				QPixmap::CopyROP);
+		}
+	}
+	setPixmap(0, out);
 }
 
 void ContactViewItem::animateNick()
diff -urN psi-0.11.orig/src/options/opt_appearance.cpp psi-0.11/src/options/opt_appearance.cpp
--- psi-0.11.orig/src/options/opt_appearance.cpp	2007-10-14 16:00:52.000000000 +0200
+++ psi-0.11/src/options/opt_appearance.cpp	2008-01-25 18:27:20.619079539 +0100
@@ -111,6 +111,7 @@
 
 	OptAppearanceMiscUI *d = (OptAppearanceMiscUI *)w;
 
+	opt->clStIndicator = d->ck_statusIndicator->isChecked();
 	opt->clNewHeadings = d->ck_newHeadings->isChecked();	
 	opt->outlineHeadings = d->ck_outlineHeadings->isChecked();	
 	PsiOptions::instance()->setOption("options.ui.contactlist.opacity", d->sl_rosterop->value());
@@ -124,6 +125,8 @@
 
 	OptAppearanceMiscUI *d = (OptAppearanceMiscUI *)w;
 
+	d->ck_statusIndicator->setChecked( opt->clStIndicator );
+
 	d->ck_newHeadings->setChecked( opt->clNewHeadings );
 	d->ck_outlineHeadings->setChecked( opt->outlineHeadings );
 	
@@ -279,7 +282,7 @@
 
 	//OptAppearanceUI *d = (OptAppearanceUI *)w;
 	//d->ck_avatarsChatdlg->setChecked( opt->avatarsChatdlgEnabled ); // Avatars
-
+	
 	int n;
 	for (n = 0; n < 4; ++n)
 		le_font[n]->setFont(opt->font[n]);
diff -urN psi-0.11.orig/src/options/opt_appearance_misc.ui psi-0.11/src/options/opt_appearance_misc.ui
--- psi-0.11.orig/src/options/opt_appearance_misc.ui	2007-10-14 16:00:52.000000000 +0200
+++ psi-0.11/src/options/opt_appearance_misc.ui	2008-01-25 18:27:20.619079539 +0100
@@ -23,6 +23,28 @@
     <number>6</number>
    </property>
    <item>
+    <widget class="QGroupBox" name="gb_statusIndicator" >
+     <property name="title" >
+      <string>Status indicator</string>
+     </property>
+     <layout class="QGridLayout" >
+      <property name="margin" >
+       <number>8</number>
+      </property>
+      <property name="spacing" >
+       <number>6</number>
+      </property>
+      <item row="1" column="0" >
+       <widget class="QCheckBox" name="ck_statusIndicator" >
+        <property name="text">
+         <string>Show indicator for text statuses</string>
+        </property>
+       </widget>
+      </item>
+     </layout>
+    </widget>
+   </item>
+   <item>
     <widget class="QGroupBox" name="groupBox4" >
      <property name="title" >
       <string>Headings</string>
@@ -143,6 +165,7 @@
  <layoutdefault spacing="6" margin="11" />
  <pixmapfunction>qPixmapFromMimeSource</pixmapfunction>
  <tabstops>
+  <tabstop>ck_statusIndicator</tabstop>
   <tabstop>ck_outlineHeadings</tabstop>
   <tabstop>ck_newHeadings</tabstop>
   <tabstop>sl_rosterop</tabstop>
diff -urN psi-0.11.orig/src/psiiconset.cpp psi-0.11/src/psiiconset.cpp
--- psi-0.11.orig/src/psiiconset.cpp	2007-10-14 16:00:53.000000000 +0200
+++ psi-0.11/src/psiiconset.cpp	2008-01-25 18:27:20.619079539 +0100
@@ -523,6 +523,19 @@
 	return PsiIcon();
 }
 
+PsiIcon *PsiIconset::indicatorPtr(const XMPP::Jid &jid)
+{
+	return d->jid2icon(jid, "psi/statInd");
+}
+
+PsiIcon PsiIconset::indicator(const XMPP::Jid &jid)
+{
+	PsiIcon *icon = indicatorPtr(jid);
+	if ( icon )
+		return *icon;
+	return PsiIcon();
+}
+
 PsiIcon *PsiIconset::statusPtr(const XMPP::Jid &jid, int s)
 {
 	return d->jid2icon(jid, status2name(s));
diff -urN psi-0.11.orig/src/psiiconset.h psi-0.11/src/psiiconset.h
--- psi-0.11.orig/src/psiiconset.h	2007-10-14 16:00:53.000000000 +0200
+++ psi-0.11/src/psiiconset.h	2008-01-25 18:27:20.619079539 +0100
@@ -64,9 +64,11 @@
 	// JID-enabled status functions
 	PsiIcon *statusPtr(const XMPP::Jid &, int);
 	PsiIcon *statusPtr(const XMPP::Jid &, const XMPP::Status &);
+	PsiIcon *indicatorPtr(const XMPP::Jid &);
 
 	PsiIcon status(const XMPP::Jid &, int);
 	PsiIcon status(const XMPP::Jid &, const XMPP::Status &);
+	PsiIcon indicator(const XMPP::Jid &);
 
 	// functions to get status icon by transport name
 	PsiIcon *transportStatusPtr(QString name, int);
diff -urN psi-0.11.orig/src/psi_profiles.cpp psi-0.11/src/psi_profiles.cpp
--- psi-0.11.orig/src/psi_profiles.cpp	2008-01-25 18:08:13.000000000 +0100
+++ psi-0.11/src/psi_profiles.cpp	2008-01-25 18:27:20.619079539 +0100
@@ -535,6 +535,8 @@
 		prefs.font[fPopup] = font.toString();
 	}
 
+	prefs.clStIndicator = TRUE;
+
 	// calculate the small font size
 	const int minimumFontSize = 7;
 	prefs.smallFontSize = qApp->font().pointSize();
@@ -987,6 +989,7 @@
 
 		p_lnf.appendChild(textTag(doc, "newHeadings", prefs.clNewHeadings));
 		p_lnf.appendChild(textTag(doc, "outline-headings", prefs.outlineHeadings));
+		p_lnf.appendChild(textTag(doc, "statusIndicator", prefs.clStIndicator));
 
 		{
 			QDomElement tag = doc.createElement("colors");
@@ -1543,6 +1546,7 @@
 
 			readBoolEntry(p_lnf, "newHeadings", &prefs.clNewHeadings);
 			readBoolEntry(p_lnf, "outline-headings", &prefs.outlineHeadings);
+			readBoolEntry(p_lnf, "statusIndicator", &prefs.clStIndicator);
 			migrateIntEntry(p_lnf, "chat-opacity", "options.ui.chat.opacity");
 			migrateIntEntry(p_lnf, "roster-opacity", "options.ui.contactlist.opacity");
 
