diff -ru -X exclude iris-clean/xmpp-im/client.cpp iris/xmpp-im/client.cpp
--- iris-clean/xmpp-im/client.cpp	Tue Feb 24 19:45:40 2004
+++ iris/xmpp-im/client.cpp	Thu Apr 15 07:05:08 2004
@@ -792,10 +792,27 @@
 
 	// unavailable?  remove the resource
 	if(!s.isAvailable()) {
-		if(found) {
-			(*rit).setStatus(s);
-			debug(QString("Client: Removing resource from [%1]: name=[%2]\n").arg(i->jid().full()).arg(j.resource()));
-			resourceUnavailable(j, *rit);
+		Resource r;
+		if(!found) {
+			//if (!s.status().isEmpty()) {
+				r = Resource(j.resource(), s);
+				i->resourceList() += r;
+				debug(QString("Client: Adding resource to [%1]: name=[%2]\n").arg(i->jid().full()).arg(j.resource()));
+				resourceAvailable(j, r);
+		} 
+		else {
+				(*rit).setStatus(s);
+				r = *rit;
+				debug(QString("Client: Updating resource to [%1]: name=[%2]\n").arg(i->jid().full()).arg(j.resource()));
+				resourceAvailable(j, r);			
+		}
+		
+		rit = i->resourceList().find(j.resource());
+		found = (rit == i->resourceList().end()) ? false: true;
+		
+ 		if(found) {
+ 			(*rit).setStatus(s);
+ 			debug(QString("Client: Removing resource from [%1]: name=[%2]\n").arg(i->jid().full()).arg(j.resource())); 	resourceUnavailable(j, *rit);
 			i->resourceList().remove(rit);
 			i->setLastUnavailableStatus(s);
 		}
diff -ru -X exclude psi-clean/src/chatdlg.cpp psi/src/chatdlg.cpp
--- psi-clean/src/chatdlg.cpp	Thu Apr 01 09:44:42 2004
+++ psi/src/chatdlg.cpp	Thu Apr 15 07:05:08 2004
@@ -366,8 +366,10 @@
 			u = ul.first();
 			if(rname.isEmpty()) {
 				// use priority
-				if(!u->isAvailable())
+				if(!u->isAvailable()){
 					status = STATUS_OFFLINE;
+					statusString = u->lastUnavailableStatus().status();
+				}
 				else {
 					const UserResource &r = *u->userResourceList().priority();
 					status = makeSTATUS(r.status());
diff -ru -X exclude psi-clean/src/common.h psi/src/common.h
--- psi-clean/src/common.h	Thu Mar 04 22:04:00 2004
+++ psi/src/common.h	Thu Apr 15 07:05:08 2004
@@ -138,6 +138,7 @@
 	QStringList gcHighlights, gcNickColors;
 
 	bool clNewHeadings;
+	bool clStIndicator;
 
 	// passive popups
 	bool ppIsOn;
diff -ru -X exclude psi-clean/src/contactview.cpp psi/src/contactview.cpp
--- psi-clean/src/contactview.cpp	Sun Mar 21 15:45:20 2004
+++ psi/src/contactview.cpp	Thu Apr 15 08:30:14 2004
@@ -25,6 +25,7 @@
 #include<qheader.h>
 #include<qtimer.h>
 #include<qpainter.h>
+#include<qbitmap.h>
 #include<qpopupmenu.h>
 #include<qmessagebox.h>
 #include<qinputdialog.h>
@@ -2652,12 +2751,13 @@
 
 void ContactViewItem::setIcon(const Icon *icon, bool alert)
 {
+	/* needed by status indicator :o|
 	if ( d->lastIcon == icon ) {
 		return; // cause less flicker. but still have to run calltree valgring skin on psi while online (mblsha).
 	}
 	else
 		d->lastIcon = (Icon *)icon;
-
+	*/
 	if ( d->icon ) {
 		disconnect(d->icon, 0, this, 0 );
 		d->icon->stop();
@@ -2679,12 +2779,42 @@
 		pix = d->icon->pixmap();
 	}
 
-	setPixmap(0, pix);
+	iconUpdated(pix);
 }
 
 void ContactViewItem::iconUpdated(const QPixmap &pix)
 {
-	setPixmap(0, pix);
+	QPixmap out(pix);
+	// add status indicator to contact icon
+	if(d->u && !out.isNull()){
+		bool ind = false;
+		if(!d->u->userResourceList().isEmpty() && option.clStIndicator) {
+			UserResourceList srl = d->u->userResourceList();
+
+			for(UserResourceList::ConstIterator rit = srl.begin(); rit != srl.end(); ++rit)
+				if(!(*rit).status().status().isEmpty()) { ind = true; break; }
+			
+		} 
+		else if(!d->u->lastUnavailableStatus().status().isEmpty() && option.clStIndicator)
+			ind = true;
+
+		if(ind) {
+			const QPixmap &ipix = is->indicator(d->u->jid()).pixmap();
+			// sum masks
+			if(out.hasAlpha() && ipix.hasAlpha()){
+				QBitmap mask(*out.mask());
+				const QBitmap* imask = ipix.mask();
+				bitBlt(&mask, (mask.width() - imask->width())/2, (mask.height() - imask->height())/2, 
+					imask, 0, 0, imask->width(), imask->height(), 
+					QPixmap::OrROP);
+				out.setMask(mask);
+			}
+			bitBlt(&out, (out.width() - ipix.width())/2, (out.height() - ipix.height())/2, 
+				&ipix, 0, 0, ipix.width(), ipix.height(), 
+				QPixmap::CopyROP);
+		}
+	}
+	setPixmap(0, out);
 }
 
 void ContactViewItem::animateNick()
diff -ru -X exclude psi-clean/src/options/opt_appearance-ui.ui psi/src/options/opt_appearance-ui.ui
--- psi-clean/src/options/opt_appearance-ui.ui	Thu Dec 11 16:44:18 2003
+++ psi/src/options/opt_appearance-ui.ui	Thu Apr 15 07:05:08 2004
@@ -30,6 +30,14 @@
                 <string>Small group headings in roster</string>
             </property>
         </widget>
+        <widget class="QCheckBox">
+            <property name="name">
+                <cstring>ck_statusIndicator</cstring>
+            </property>
+            <property name="text">
+                <string>Show indicator for text statuses</string>
+            </property>
+        </widget>
         <widget class="QGroupBox">
             <property name="name">
                 <cstring>groupBox11</cstring>
diff -ru -X exclude psi-clean/src/options/opt_appearance.cpp psi/src/options/opt_appearance.cpp
--- psi-clean/src/options/opt_appearance.cpp	Tue Dec 02 14:28:58 2003
+++ psi/src/options/opt_appearance.cpp	Thu Apr 15 07:05:08 2004
@@ -112,6 +112,9 @@
 	QWhatsThis::add(d->pb_cAnimBack,
 		tr("Specifies the background animation color for nicks."));
 
+	QWhatsThis::add(d->ck_statusIndicator,
+		tr("Displays an indicator by the contact name if the contact entered a descriptive text status line."));
+
 	QWhatsThis::add(d->ck_newHeadings,
 		tr("Toggles on new, smaller group headings."));
 
@@ -125,6 +128,7 @@
 
 	OptAppearanceUI *d = (OptAppearanceUI *)w;
 	opt->clNewHeadings = d->ck_newHeadings->isChecked();
+	opt->clStIndicator = d->ck_statusIndicator->isChecked();
 
 	int n;
 	for (n = 0; n < 3; ++n)
@@ -141,6 +145,7 @@
 
 	OptAppearanceUI *d = (OptAppearanceUI *)w;
 	d->ck_newHeadings->setChecked( opt->clNewHeadings );
+	d->ck_statusIndicator->setChecked( opt->clStIndicator );
 
 	int n;
 	for (n = 0; n < 3; ++n)
diff -ru -X exclude psi-clean/src/psiiconset.cpp psi/src/psiiconset.cpp
--- psi-clean/src/psiiconset.cpp	Sun Jan 25 14:52:04 2004
+++ psi/src/psiiconset.cpp	Thu Apr 15 07:05:08 2004
@@ -510,6 +510,19 @@
 	return Icon();
 }
 
+Icon *PsiIconset::indicatorPtr(const XMPP::Jid &jid)
+{
+	return d->jid2icon(jid, "psi/statInd");
+}
+
+Icon PsiIconset::indicator(const XMPP::Jid &jid)
+{
+	Icon *icon = indicatorPtr(jid);
+	if ( icon )
+		return *icon;
+	return Icon();
+}
+
 Icon *PsiIconset::statusPtr(const XMPP::Jid &jid, int s)
 {
 	return d->jid2icon(jid, status2name(s));
diff -ru -X exclude psi-clean/src/psiiconset.h psi/src/psiiconset.h
--- psi-clean/src/psiiconset.h	Sat Nov 22 07:47:10 2003
+++ psi/src/psiiconset.h	Thu Apr 15 07:05:08 2004
@@ -61,9 +61,11 @@
 	// JID-enabled status functions
 	Icon *statusPtr(const XMPP::Jid &, int);
 	Icon *statusPtr(const XMPP::Jid &, const XMPP::Status &);
+	Icon *indicatorPtr(const XMPP::Jid &);
 
 	Icon status(const XMPP::Jid &, int);
 	Icon status(const XMPP::Jid &, const XMPP::Status &);
+	Icon indicator(const XMPP::Jid &);
 
 	// functions to get status icon by transport name
 	Icon *transportStatusPtr(QString name, int);
diff -ru -X exclude psi-clean/src/psi_profiles.cpp psi/src/psi_profiles.cpp
--- psi-clean/src/psi_profiles.cpp	Sun Mar 21 15:47:06 2004
+++ psi/src/psi_profiles.cpp	Thu Apr 15 07:05:08 2004
@@ -423,6 +423,8 @@
 		prefs.font[fPopup] = font.toString();
 	}
 
+	prefs.clStIndicator = TRUE;
+
 	// calculate the small font size
 	const int minimumFontSize = 7;
 	prefs.smallFontSize = qApp->font().pointSize();
@@ -774,6 +776,7 @@
 		p.appendChild(p_lnf);
 
 		p_lnf.appendChild(textTag(doc, "newHeadings", prefs.clNewHeadings));
+		p_lnf.appendChild(textTag(doc, "statusIndicator", prefs.clStIndicator));
 
 		{
 			QDomElement tag = doc.createElement("colors");
@@ -1258,6 +1261,7 @@
 			bool found;
 
 			readBoolEntry(p_lnf, "newHeadings", &prefs.clNewHeadings);
+			readBoolEntry(p_lnf, "statusIndicator", &prefs.clStIndicator);
 
 			QDomElement tag = findSubTag(p_lnf, "colors", &found);
 			if(found) {
